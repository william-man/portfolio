{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"logs/log1/","text":"Week of: 6/1/25 1. Objectives/Goals Familiarize myself with the company\u2019s handbook and processes. Begin learning PHP through exercises. 2. Activities/Tasks Completed Read through the company playbook and other necessary blogposts/links. Focused on sections about company culture, values, and policies. Installed developer environment. Continued practicing PHP by completing introductory exercises (e.g., syntax, variables, and loops). Started working on my first assigned issue, reviewing the requirements and initial implementation steps. 3. Key Learnings Gained a better understanding of the company\u2019s values and expectations. Learned PHP basics, including syntax and core programming concepts. Began understanding the workflow for tackling assigned issues in the company\u2019s context. 4. Challenges Faced Understanding the initial steps to take for the assigned issue (but made progress by reviewing requirements). 5. Feedback/Support Needed -- 6. Next Week\u2019s Goals Complete my first assigned issue and submit it for review. Continue practicing PHP.","title":"Week of: 6/1/25"},{"location":"logs/log1/#week-of-6125","text":"","title":"Week of: 6/1/25"},{"location":"logs/log1/#1-objectivesgoals","text":"Familiarize myself with the company\u2019s handbook and processes. Begin learning PHP through exercises.","title":"1. Objectives/Goals"},{"location":"logs/log1/#2-activitiestasks-completed","text":"Read through the company playbook and other necessary blogposts/links. Focused on sections about company culture, values, and policies. Installed developer environment. Continued practicing PHP by completing introductory exercises (e.g., syntax, variables, and loops). Started working on my first assigned issue, reviewing the requirements and initial implementation steps.","title":"2. Activities/Tasks Completed"},{"location":"logs/log1/#3-key-learnings","text":"Gained a better understanding of the company\u2019s values and expectations. Learned PHP basics, including syntax and core programming concepts. Began understanding the workflow for tackling assigned issues in the company\u2019s context.","title":"3. Key Learnings"},{"location":"logs/log1/#4-challenges-faced","text":"Understanding the initial steps to take for the assigned issue (but made progress by reviewing requirements).","title":"4. Challenges Faced"},{"location":"logs/log1/#5-feedbacksupport-needed","text":"--","title":"5. Feedback/Support Needed"},{"location":"logs/log1/#6-next-weeks-goals","text":"Complete my first assigned issue and submit it for review. Continue practicing PHP.","title":"6. Next Week\u2019s Goals"},{"location":"logs/log2/","text":"Week of: 13/1/25 1. Objectives/Goals Continue converting PHPUnit tests to Kahlan tests. Ensure all new .spec.php files are functional and aligned with Kahlan's syntax. Validate the functionality of the new test suite. 2. Activities/Tasks Completed Successfully transformed several PHPUnit test files into Kahlan-compatible .spec.php files. Addressed challenges in converting PHPUnit assertions, mock objects, and setup methods to Kahlan syntax. 3. Key Learnings -Gained a deeper understanding of Kahlan\u2019s syntax and testing approach. Learned effective strategies for replacing PHPUnit's setUp and tearDown methods with Kahlan's beforeEach and afterEach. 4. Challenges Faced Guidance on converting complex PHPUnit test setups to Kahlan, especially for tests relying on extensive mock objects. Debugging issues with specific test cases that didn\u2019t behave as expected in Kahlan. 5. Feedback/Support Needed Suggestions for handling large PHPUnit test files with complex structures. 6. Next Week\u2019s Goals Finalize the conversion of all PHPUnit test files to Kahlan. Ensure the new test suite passes successfully with no errors.","title":"Week of: 13/1/25"},{"location":"logs/log2/#week-of-13125","text":"","title":"Week of: 13/1/25"},{"location":"logs/log2/#1-objectivesgoals","text":"Continue converting PHPUnit tests to Kahlan tests. Ensure all new .spec.php files are functional and aligned with Kahlan's syntax.","title":"1. Objectives/Goals"},{"location":"logs/log2/#validate-the-functionality-of-the-new-test-suite","text":"","title":"Validate the functionality of the new test suite."},{"location":"logs/log2/#2-activitiestasks-completed","text":"Successfully transformed several PHPUnit test files into Kahlan-compatible .spec.php files. Addressed challenges in converting PHPUnit assertions, mock objects, and setup methods to Kahlan syntax.","title":"2. Activities/Tasks Completed"},{"location":"logs/log2/#3-key-learnings","text":"-Gained a deeper understanding of Kahlan\u2019s syntax and testing approach. Learned effective strategies for replacing PHPUnit's setUp and tearDown methods with Kahlan's beforeEach and afterEach.","title":"3. Key Learnings"},{"location":"logs/log2/#4-challenges-faced","text":"Guidance on converting complex PHPUnit test setups to Kahlan, especially for tests relying on extensive mock objects. Debugging issues with specific test cases that didn\u2019t behave as expected in Kahlan.","title":"4. Challenges Faced"},{"location":"logs/log2/#5-feedbacksupport-needed","text":"Suggestions for handling large PHPUnit test files with complex structures.","title":"5. Feedback/Support Needed"},{"location":"logs/log2/#6-next-weeks-goals","text":"Finalize the conversion of all PHPUnit test files to Kahlan. Ensure the new test suite passes successfully with no errors.","title":"6. Next Week\u2019s Goals"},{"location":"logs/log3/","text":"Week of: 20/1/25 1. Objectives/Goals Understand and implement git rebase in local development workflows. Learn best practices for handling conflicts during rebasing. Improve branch management by integrating rebased changes cleanly. 2. Activities/Tasks Completed Practiced using git rebase to maintain a clean commit history. Explored interactive rebasing to squash, edit, and reorder commits. Learned how to safely abort and continue a rebase when encountering issues. 3. Key Learnings git log --oneline helps view a simplified commit history for better readability. git rebase helps maintain a linear commit history, making project history easier to read. Interactive rebasing ( git rebase -i ) allows for better commit organization. Differences between git merge and git rebase , and when to use each. 4. Challenges Faced Understanding when to prefer git rebase over git merge in collaborative projects. Managing conflicts when multiple commits needed to be rebased. Accidentally overwriting local changes and learning how to recover them.","title":"Week of: 20/1/25"},{"location":"logs/log3/#week-of-20125","text":"","title":"Week of: 20/1/25"},{"location":"logs/log3/#1-objectivesgoals","text":"Understand and implement git rebase in local development workflows. Learn best practices for handling conflicts during rebasing. Improve branch management by integrating rebased changes cleanly.","title":"1. Objectives/Goals"},{"location":"logs/log3/#2-activitiestasks-completed","text":"Practiced using git rebase to maintain a clean commit history. Explored interactive rebasing to squash, edit, and reorder commits. Learned how to safely abort and continue a rebase when encountering issues.","title":"2. Activities/Tasks Completed"},{"location":"logs/log3/#3-key-learnings","text":"git log --oneline helps view a simplified commit history for better readability. git rebase helps maintain a linear commit history, making project history easier to read. Interactive rebasing ( git rebase -i ) allows for better commit organization. Differences between git merge and git rebase , and when to use each.","title":"3. Key Learnings"},{"location":"logs/log3/#4-challenges-faced","text":"Understanding when to prefer git rebase over git merge in collaborative projects. Managing conflicts when multiple commits needed to be rebased. Accidentally overwriting local changes and learning how to recover them.","title":"4. Challenges Faced"},{"location":"logs/log4/","text":"Week of: 29/1/25 1. Objectives/Goals Enhance the Docker-based local development environment for WordPress with HTTPS. Ensure OpenSSL generates valid self-signed certificates within the Docker build process. Debug Apache configuration issues preventing HTTPS from working correctly. 2. Activities/Tasks Completed Wrote a Bash script to understand how to automate the process and then rewrote it into the Dockerfile. Reconfigured OpenSSL command in Dockerfile to properly use an external configuration file. Debugged Apache virtual host configuration to ensure proper SSL certificate linking. Confirmed correct mounting of openssl.cnf via Docker volumes. Double-checked that the certificate, key, and cnf files are part of the image when it is built. 3. Key Learning Apache\u2019s site configuration must be properly enabled using a2ensite . Debugging Docker builds requires checking for missing files inside the container. Learned how to use docker-compose down to delete the container and related volumes. Learned how to use docker build --no-cache to force a fresh image rebuild. 4. Challenges Faced OpenSSL throwing errors due to improper [EXT] section formatting. Apache failing to recognize the SSL site until a2ensite apache-https was run manually. Ensuring that SSL certificates were correctly generated and linked within Apache\u2019s configuration","title":"Week of: 29/1/25"},{"location":"logs/log4/#week-of-29125","text":"","title":"Week of: 29/1/25"},{"location":"logs/log4/#1-objectivesgoals","text":"Enhance the Docker-based local development environment for WordPress with HTTPS. Ensure OpenSSL generates valid self-signed certificates within the Docker build process. Debug Apache configuration issues preventing HTTPS from working correctly.","title":"1. Objectives/Goals"},{"location":"logs/log4/#2-activitiestasks-completed","text":"Wrote a Bash script to understand how to automate the process and then rewrote it into the Dockerfile. Reconfigured OpenSSL command in Dockerfile to properly use an external configuration file. Debugged Apache virtual host configuration to ensure proper SSL certificate linking. Confirmed correct mounting of openssl.cnf via Docker volumes. Double-checked that the certificate, key, and cnf files are part of the image when it is built.","title":"2. Activities/Tasks Completed"},{"location":"logs/log4/#3-key-learning","text":"Apache\u2019s site configuration must be properly enabled using a2ensite . Debugging Docker builds requires checking for missing files inside the container. Learned how to use docker-compose down to delete the container and related volumes. Learned how to use docker build --no-cache to force a fresh image rebuild.","title":"3. Key Learning"},{"location":"logs/log4/#4-challenges-faced","text":"OpenSSL throwing errors due to improper [EXT] section formatting. Apache failing to recognize the SSL site until a2ensite apache-https was run manually. Ensuring that SSL certificates were correctly generated and linked within Apache\u2019s configuration","title":"4. Challenges Faced"},{"location":"logs/log5/","text":"Week of: 3/2/25 1. Objectives/Goals Create custom wordpress plugin Review first PR from Sarah. 2. Activities/Tasks Completed WordPress Plugin Development : Explored how plugins are structured within WordPress. Setup dependencies in the main plugin file following (article) Completed to PR reviews with Marika following guidelines from playbook and articles: Commit Messages Keep Changelog SemVer - 3. Key Learnings WordPress plugins rely heavily on hooks , and proper implementation ensures smooth activation/deactivation. Plugin development requires clear structuring for better scalability and maintainability. How to write PR reviews in a constructive way. 4. Challenges Faced Finding the right hook for handling dependencies (no longer needed, see article 1) Adjusting to the writing style of reviewing PRs and writing my own","title":"Week of: 3/2/25"},{"location":"logs/log5/#week-of-3225","text":"","title":"Week of: 3/2/25"},{"location":"logs/log5/#1-objectivesgoals","text":"Create custom wordpress plugin Review first PR from Sarah.","title":"1. Objectives/Goals"},{"location":"logs/log5/#2-activitiestasks-completed","text":"WordPress Plugin Development : Explored how plugins are structured within WordPress. Setup dependencies in the main plugin file following (article) Completed to PR reviews with Marika following guidelines from playbook and articles: Commit Messages Keep Changelog SemVer -","title":"2. Activities/Tasks Completed"},{"location":"logs/log5/#3-key-learnings","text":"WordPress plugins rely heavily on hooks , and proper implementation ensures smooth activation/deactivation. Plugin development requires clear structuring for better scalability and maintainability. How to write PR reviews in a constructive way.","title":"3. Key Learnings"},{"location":"logs/log5/#4-challenges-faced","text":"Finding the right hook for handling dependencies (no longer needed, see article 1) Adjusting to the writing style of reviewing PRs and writing my own","title":"4. Challenges Faced"},{"location":"logs/log6/","text":"Week of: 10/2/25 1. Objectives/Goals Create a sorting feature for the WordPress plugin. Implement an export to CSV feature. 2. Activities/Tasks Completed WordPress Plugin Development : Developed a sorting feature to sort the Users table by the Two-Factor column . Implemented an export functionality to allow admins to download user metadata in CSV format . Wrote tests for the sorting feature . Wrote tests for the export CSV feature . 3. Key Learnings To enable sorting for a table in the WordPress dashboard, you need to use the manage_${screen_id}_sortable_columns filter to register sortable columns and implement sorting logic using the pre_get_posts action . Learned how to run JavaScript in WordPress using wp_enqueue_script and the admin_enqueue_script hook to load JavaScript only in the admin dashboard . Discovered how to pass PHP variables to JavaScript using wp_localize_script , allowing dynamic data to be accessed within scripts. Learned how to generate and export data dynamically using php://output to write directly to the browser and temporarily store it there for immediate use. Understood the importance of setting headers before exporting content to ensure the correct file format is sent to the browser. For example, when exporting a CSV file: php header('Content-Type: text/csv; charset=utf-8'); header('Content-Disposition: attachment; filename=\"export.csv\"'); $output = fopen('php://output', 'w'); fputcsv($output, ['Column 1', 'Column 2', 'Column 3']); // Example data fclose($output); exit; This ensures clarity on how to properly export files. Let me know if you'd like any refinements! \ud83d\ude80 4. Challenges Faced Methods becoming too large , requiring refactoring for better readability and easier testing.","title":"Week of: 10/2/25"},{"location":"logs/log6/#week-of-10225","text":"","title":"Week of: 10/2/25"},{"location":"logs/log6/#1-objectivesgoals","text":"Create a sorting feature for the WordPress plugin. Implement an export to CSV feature.","title":"1. Objectives/Goals"},{"location":"logs/log6/#2-activitiestasks-completed","text":"WordPress Plugin Development : Developed a sorting feature to sort the Users table by the Two-Factor column . Implemented an export functionality to allow admins to download user metadata in CSV format . Wrote tests for the sorting feature . Wrote tests for the export CSV feature .","title":"2. Activities/Tasks Completed"},{"location":"logs/log6/#3-key-learnings","text":"To enable sorting for a table in the WordPress dashboard, you need to use the manage_${screen_id}_sortable_columns filter to register sortable columns and implement sorting logic using the pre_get_posts action . Learned how to run JavaScript in WordPress using wp_enqueue_script and the admin_enqueue_script hook to load JavaScript only in the admin dashboard . Discovered how to pass PHP variables to JavaScript using wp_localize_script , allowing dynamic data to be accessed within scripts. Learned how to generate and export data dynamically using php://output to write directly to the browser and temporarily store it there for immediate use. Understood the importance of setting headers before exporting content to ensure the correct file format is sent to the browser. For example, when exporting a CSV file: php header('Content-Type: text/csv; charset=utf-8'); header('Content-Disposition: attachment; filename=\"export.csv\"'); $output = fopen('php://output', 'w'); fputcsv($output, ['Column 1', 'Column 2', 'Column 3']); // Example data fclose($output); exit; This ensures clarity on how to properly export files. Let me know if you'd like any refinements! \ud83d\ude80","title":"3. Key Learnings"},{"location":"logs/log6/#4-challenges-faced","text":"Methods becoming too large , requiring refactoring for better readability and easier testing.","title":"4. Challenges Faced"},{"location":"logs/log7/","text":"Week of: 17/2/25 1. Objectives/Goals Redirect users to their profile page in the WordPress dashboard if they don\u2019t have Two-Factor Authentication (2FA) enabled. Fix the export feature to ensure it exports the correct user data. 2. Activities/Tasks Completed WordPress Plugin Development : Created a PR to redirect users to their profile page in the WordPress dashboard immediately after they log in . Fixed the export feature to ensure it includes the correct data fields. Moved the export button from the Exports page to the Users page for better accessibility. 3. Key Learnings Learned how to use wp_redirect to redirect the user after login. Learned how to correctly use $hook_suffix in admin_enqueue_script to ensure scripts are only loaded on the correct admin page. Learned how to create constants in PHP using define() . Learned how to cast an array into an object for mocking purposes in testing. 4. Challenges Faced Ensuring the export function includes the correct data for all users. Updating the tests relative to the new code. Annotating the code with the right types.","title":"Week of: 17/2/25"},{"location":"logs/log7/#week-of-17225","text":"","title":"Week of: 17/2/25"},{"location":"logs/log7/#1-objectivesgoals","text":"Redirect users to their profile page in the WordPress dashboard if they don\u2019t have Two-Factor Authentication (2FA) enabled. Fix the export feature to ensure it exports the correct user data.","title":"1. Objectives/Goals"},{"location":"logs/log7/#2-activitiestasks-completed","text":"WordPress Plugin Development : Created a PR to redirect users to their profile page in the WordPress dashboard immediately after they log in . Fixed the export feature to ensure it includes the correct data fields. Moved the export button from the Exports page to the Users page for better accessibility.","title":"2. Activities/Tasks Completed"},{"location":"logs/log7/#3-key-learnings","text":"Learned how to use wp_redirect to redirect the user after login. Learned how to correctly use $hook_suffix in admin_enqueue_script to ensure scripts are only loaded on the correct admin page. Learned how to create constants in PHP using define() . Learned how to cast an array into an object for mocking purposes in testing.","title":"3. Key Learnings"},{"location":"logs/log7/#4-challenges-faced","text":"Ensuring the export function includes the correct data for all users. Updating the tests relative to the new code. Annotating the code with the right types.","title":"4. Challenges Faced"},{"location":"projects/openssl/","text":"Openssl","title":"Openssl"},{"location":"projects/openssl/#openssl","text":"","title":"Openssl"},{"location":"projects/twofactorextras/","text":"Two Factor Extras","title":"Two Factor Extras"},{"location":"projects/twofactorextras/#two-factor-extras","text":"","title":"Two Factor Extras"}]}